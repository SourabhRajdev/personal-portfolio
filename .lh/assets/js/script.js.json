{
    "sourceFile": "assets/js/script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1754479516728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754480161391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,33 +157,79 @@\n \n   });\n }\n \n-// contact form submission handler using FormSubmit\n-form.addEventListener(\"submit\", function (event) {\n+// contact form submission handler using FormSubmit (modernized with async/await, validation, and toast UI)\n+form.addEventListener(\"submit\", async function (event) {\n   event.preventDefault();\n \n   const formData = new FormData(form);\n-  const name = formData.get(\"name\");\n-  const email = formData.get(\"email\");\n-  const message = formData.get(\"message\");\n+  const name = formData.get(\"name\") ? formData.get(\"name\").trim() : \"\";\n+  const email = formData.get(\"email\") ? formData.get(\"email\").trim() : \"\";\n+  const message = formData.get(\"message\") ? formData.get(\"message\").trim() : \"\";\n \n-  fetch(\"https://formsubmit.co/sourabhrajdev25@gmai.com\", {\n-    method: \"POST\",\n-    headers: {\n-      'Accept': 'application/json'\n-    },\n-    body: formData\n-  })\n-  .then(response => {\n+  // Simple validation\n+  if (!name || !email || !message) {\n+    showToast(\"‚ö†Ô∏è Please fill in all fields.\");\n+    return;\n+  }\n+  // Email structure validation\n+  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\\ No newline at end of file\n+  if (!emailPattern.test(email)) {\n+    showToast(\"‚ö†Ô∏è Please enter a valid email address.\");\n+    return;\n+  }\n+\n+  try {\n+    const response = await fetch(\"https://formsubmit.co/sourabhrajdev25@gmail.com\", {\n+      method: \"POST\",\n+      headers: { 'Accept': 'application/json' },\n+      body: formData\n+    });\n+\n     if (response.ok) {\n-      alert(\"Message sent successfully!\");\n+      showToast(\"‚úÖ Message sent successfully!\");\n       form.reset();\n       formBtn.setAttribute(\"disabled\", \"\");\n     } else {\n-      alert(\"Failed to send message. Please try again.\");\n+      let result;\n+      try {\n+        result = await response.json();\n+      } catch {\n+        result = {};\n+      }\n+      showToast(\"‚ùå Failed: \" + (result.message || \"Unable to send message.\"));\n     }\n-  })\n-  .catch(() => {\n-    alert(\"Error sending message. Please check your connection.\");\n+  } catch (error) {\n+    showToast(\"üö´ Network error: \" + (error && error.message ? error.message : \"Unknown error\"));\n+  }\n+});\n+\n+function showToast(message) {\n+  const toast = document.createElement(\"div\");\n+  toast.innerText = message;\n+  toast.style.cssText = `\n+    position: fixed;\n+    bottom: 30px;\n+    right: 30px;\n+    background: #111;\n+    color: #fff;\n+    padding: 12px 20px;\n+    border-radius: 6px;\n+    font-size: 0.95rem;\n+    box-shadow: 0 8px 24px rgba(0,0,0,0.15);\n+    z-index: 9999;\n+    opacity: 0;\n+    transform: translateY(20px);\n+    transition: all 0.3s ease;\n+  `;\n+  document.body.appendChild(toast);\n+  requestAnimationFrame(() => {\n+    toast.style.opacity = \"1\";\n+    toast.style.transform = \"translateY(0)\";\n   });\n-});\n+  setTimeout(() => {\n+    toast.style.opacity = \"0\";\n+    toast.style.transform = \"translateY(20px)\";\n+    setTimeout(() => document.body.removeChild(toast), 300);\n+  }, 4000);\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754480999418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -157,51 +157,44 @@\n \n   });\n }\n \n-// contact form submission handler using FormSubmit (modernized with async/await, validation, and toast UI)\n+// contact form submission handler using Netlify-compatible version\n form.addEventListener(\"submit\", async function (event) {\n   event.preventDefault();\n \n   const formData = new FormData(form);\n-  const name = formData.get(\"name\") ? formData.get(\"name\").trim() : \"\";\n-  const email = formData.get(\"email\") ? formData.get(\"email\").trim() : \"\";\n-  const message = formData.get(\"message\") ? formData.get(\"message\").trim() : \"\";\n+  const submitBtn = form.querySelector(\"button[type='submit']\");\n+  const originalContent = submitBtn.innerHTML;\n \n-  // Simple validation\n-  if (!name || !email || !message) {\n-    showToast(\"‚ö†Ô∏è Please fill in all fields.\");\n-    return;\n-  }\n-  // Email structure validation\n-  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n-  if (!emailPattern.test(email)) {\n-    showToast(\"‚ö†Ô∏è Please enter a valid email address.\");\n-    return;\n-  }\n+  // Show loading state\n+  submitBtn.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Sending...';\n+  submitBtn.disabled = true;\n \n   try {\n-    const response = await fetch(\"https://formsubmit.co/sourabhrajdev25@gmail.com\", {\n+    await fetch(\"/\", {\n       method: \"POST\",\n-      headers: { 'Accept': 'application/json' },\n-      body: formData\n+      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n+      body: new URLSearchParams(formData).toString()\n     });\n \n-    if (response.ok) {\n-      showToast(\"‚úÖ Message sent successfully!\");\n-      form.reset();\n-      formBtn.setAttribute(\"disabled\", \"\");\n-    } else {\n-      let result;\n-      try {\n-        result = await response.json();\n-      } catch {\n-        result = {};\n-      }\n-      showToast(\"‚ùå Failed: \" + (result.message || \"Unable to send message.\"));\n-    }\n+    // Success UI\n+    submitBtn.innerHTML = '<i class=\"fas fa-check\"></i> Message Sent!';\n+    showToast(\"‚úÖ Message sent successfully!\");\n+    form.reset();\n+\n+    setTimeout(() => {\n+      submitBtn.innerHTML = originalContent;\n+      submitBtn.disabled = false;\n+    }, 3000);\n+\n   } catch (error) {\n-    showToast(\"üö´ Network error: \" + (error && error.message ? error.message : \"Unknown error\"));\n+    submitBtn.innerHTML = '<i class=\"fas fa-exclamation-triangle\"></i> Error';\n+    showToast(\"üö´ Network error: \" + (error?.message || \"Unknown\"));\n+    setTimeout(() => {\n+      submitBtn.innerHTML = originalContent;\n+      submitBtn.disabled = false;\n+    }, 3000);\n   }\n });\n \n function showToast(message) {\n"
                }
            ],
            "date": 1754479516728,
            "name": "Commit-0",
            "content": "'use strict';\n\n\n\n// element toggle function\nconst elementToggleFunc = function (elem) { elem.classList.toggle(\"active\"); }\n\n\n\n// sidebar variables\nconst sidebar = document.querySelector(\"[data-sidebar]\");\nconst sidebarBtn = document.querySelector(\"[data-sidebar-btn]\");\n\n// sidebar toggle functionality for mobile\nsidebarBtn.addEventListener(\"click\", function () { elementToggleFunc(sidebar); });\n\n\n\n// testimonials variables\nconst testimonialsItem = document.querySelectorAll(\"[data-testimonials-item]\");\nconst modalContainer = document.querySelector(\"[data-modal-container]\");\nconst modalCloseBtn = document.querySelector(\"[data-modal-close-btn]\");\nconst overlay = document.querySelector(\"[data-overlay]\");\n\n// modal variable\nconst modalImg = document.querySelector(\"[data-modal-img]\");\nconst modalTitle = document.querySelector(\"[data-modal-title]\");\nconst modalText = document.querySelector(\"[data-modal-text]\");\n\n// modal toggle function\nconst testimonialsModalFunc = function () {\n  modalContainer.classList.toggle(\"active\");\n  overlay.classList.toggle(\"active\");\n}\n\n// add click event to all modal items\nfor (let i = 0; i < testimonialsItem.length; i++) {\n\n  testimonialsItem[i].addEventListener(\"click\", function () {\n\n    modalImg.src = this.querySelector(\"[data-testimonials-avatar]\").src;\n    modalImg.alt = this.querySelector(\"[data-testimonials-avatar]\").alt;\n    modalTitle.innerHTML = this.querySelector(\"[data-testimonials-title]\").innerHTML;\n    modalText.innerHTML = this.querySelector(\"[data-testimonials-text]\").innerHTML;\n\n    testimonialsModalFunc();\n\n  });\n\n}\n\n// add click event to modal close button\nmodalCloseBtn.addEventListener(\"click\", testimonialsModalFunc);\noverlay.addEventListener(\"click\", testimonialsModalFunc);\n\n\n\n// custom select variables\nconst select = document.querySelector(\"[data-select]\");\nconst selectItems = document.querySelectorAll(\"[data-select-item]\");\nconst selectValue = document.querySelector(\"[data-selecct-value]\");\nconst filterBtn = document.querySelectorAll(\"[data-filter-btn]\");\n\nselect.addEventListener(\"click\", function () { elementToggleFunc(this); });\n\n// add event in all select items\nfor (let i = 0; i < selectItems.length; i++) {\n  selectItems[i].addEventListener(\"click\", function () {\n\n    let selectedValue = this.innerText.toLowerCase();\n    selectValue.innerText = this.innerText;\n    elementToggleFunc(select);\n    filterFunc(selectedValue);\n\n  });\n}\n\n// filter variables\nconst filterItems = document.querySelectorAll(\"[data-filter-item]\");\n\nconst filterFunc = function (selectedValue) {\n\n  for (let i = 0; i < filterItems.length; i++) {\n\n    if (selectedValue === \"all\") {\n      filterItems[i].classList.add(\"active\");\n    } else if (selectedValue === filterItems[i].dataset.category) {\n      filterItems[i].classList.add(\"active\");\n    } else {\n      filterItems[i].classList.remove(\"active\");\n    }\n\n  }\n\n}\n\n// add event in all filter button items for large screen\nlet lastClickedBtn = filterBtn[0];\n\nfor (let i = 0; i < filterBtn.length; i++) {\n\n  filterBtn[i].addEventListener(\"click\", function () {\n\n    let selectedValue = this.innerText.toLowerCase();\n    selectValue.innerText = this.innerText;\n    filterFunc(selectedValue);\n\n    lastClickedBtn.classList.remove(\"active\");\n    this.classList.add(\"active\");\n    lastClickedBtn = this;\n\n  });\n\n}\n\n\n\n// contact form variables\nconst form = document.querySelector(\"[data-form]\");\nconst formInputs = document.querySelectorAll(\"[data-form-input]\");\nconst formBtn = document.querySelector(\"[data-form-btn]\");\n\n// add event to all form input field\nfor (let i = 0; i < formInputs.length; i++) {\n  formInputs[i].addEventListener(\"input\", function () {\n\n    // check form validation\n    if (form.checkValidity()) {\n      formBtn.removeAttribute(\"disabled\");\n    } else {\n      formBtn.setAttribute(\"disabled\", \"\");\n    }\n\n  });\n}\n\n\n\n// page navigation variables\nconst navigationLinks = document.querySelectorAll(\"[data-nav-link]\");\nconst pages = document.querySelectorAll(\"[data-page]\");\n\n// add event to all nav link\nfor (let i = 0; i < navigationLinks.length; i++) {\n  navigationLinks[i].addEventListener(\"click\", function () {\n\n    for (let i = 0; i < pages.length; i++) {\n      if (this.innerHTML.toLowerCase() === pages[i].dataset.page) {\n        pages[i].classList.add(\"active\");\n        navigationLinks[i].classList.add(\"active\");\n        window.scrollTo(0, 0);\n      } else {\n        pages[i].classList.remove(\"active\");\n        navigationLinks[i].classList.remove(\"active\");\n      }\n    }\n\n  });\n}\n\n// contact form submission handler using FormSubmit\nform.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n\n  const formData = new FormData(form);\n  const name = formData.get(\"name\");\n  const email = formData.get(\"email\");\n  const message = formData.get(\"message\");\n\n  fetch(\"https://formsubmit.co/sourabhrajdev25@gmai.com\", {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json'\n    },\n    body: formData\n  })\n  .then(response => {\n    if (response.ok) {\n      alert(\"Message sent successfully!\");\n      form.reset();\n      formBtn.setAttribute(\"disabled\", \"\");\n    } else {\n      alert(\"Failed to send message. Please try again.\");\n    }\n  })\n  .catch(() => {\n    alert(\"Error sending message. Please check your connection.\");\n  });\n});"
        }
    ]
}